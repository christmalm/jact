[{"C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\index.js":"1","C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\jact.js":"2","C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\components\\about\\About.js":"3","C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\components\\plyers\\plyers.js":"4","C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\components\\home\\home.js":"5","C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\components\\login\\login.js":"6","C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\components\\admin\\admin.js":"7","C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\components\\admin\\addPlyerPopup\\AddPlyerPopup.js":"8","C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\components\\admin\\playerList\\PlayerList.js":"9","C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\constants\\api.js":"10"},{"size":226,"mtime":1618403796314,"results":"11","hashOfConfig":"12"},{"size":804,"mtime":1618403776160,"results":"13","hashOfConfig":"12"},{"size":94,"mtime":1611075520793,"results":"14","hashOfConfig":"12"},{"size":98,"mtime":1611075734332,"results":"15","hashOfConfig":"12"},{"size":280,"mtime":1618583691517,"results":"16","hashOfConfig":"12"},{"size":2803,"mtime":1618492420800,"results":"17","hashOfConfig":"12"},{"size":1106,"mtime":1618496502927,"results":"18","hashOfConfig":"12"},{"size":2135,"mtime":1618567854795,"results":"19","hashOfConfig":"12"},{"size":2217,"mtime":1618574878645,"results":"20","hashOfConfig":"12"},{"size":179,"mtime":1613210656939,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1eoal79",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\index.js",[],["47","48"],"C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\jact.js",[],"C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\components\\about\\About.js",[],"C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\components\\plyers\\plyers.js",["49"],"import React from 'react-dom';\r\n\r\nexport const Plyers = () => {\r\n  return <div>plyers</div>;\r\n};\r\n","C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\components\\home\\home.js",["50"],"C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\components\\login\\login.js",["51"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport login from './login.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport { API_URL } from '../../constants/api';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const Login = () => {\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [loginErrMsg, setLoginErrMsg] = useState([]);\r\n  const [errorPopup, setErrorPopup] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const onSubmit = (loginData, e) => {\r\n    const username = loginData.username;\r\n    const password = loginData.password;\r\n    const adminCred = { username, password };\r\n    // e.target.reset();\r\n\r\n    axios\r\n      .post(`${API_URL}/signin`, adminCred)\r\n      .then((res) => {\r\n        localStorage.setItem('loggedIn', res.data.loggedIn);\r\n        console.log(res);\r\n        e.target.reset();\r\n        history.push('/Admin');\r\n      })\r\n      .catch((err) => {\r\n        setLoginErrMsg(err.message);\r\n        console.log(err.message, 'err');\r\n        setErrorPopup(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className='wrapperloginContainer'>\r\n      {errorPopup ? (\r\n        <div className='errorPopup'>\r\n          <div className='wrapperMsg'>\r\n            {loginErrMsg === 'Request failed with status code 404' ? (\r\n              <p>User dont exist!</p>\r\n            ) : (\r\n              <p>Wrong Password!</p>\r\n            )}\r\n          </div>\r\n          <button\r\n            className='closePopup'\r\n            onClick={() => setErrorPopup(!errorPopup)}\r\n          >\r\n            close\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n      <div className='container'>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className='wrapperInput'>\r\n            <div className='username'>\r\n              <label>Username</label>\r\n            </div>\r\n            <input\r\n              type='text'\r\n              autocomplete='off'\r\n              name='username'\r\n              ref={register({ required: 'Username is required' })}\r\n            />\r\n            {errors.username ? (\r\n              <p className='errormessage'>{errors.username.message}</p>\r\n            ) : null}\r\n          </div>\r\n          <div className='wrapperInput'>\r\n            <div className='password'>\r\n              <label>Password</label>\r\n            </div>\r\n            <input\r\n              type='password'\r\n              name='password'\r\n              ref={register({ required: 'Password is required' })}\r\n            />\r\n            {errors.password ? (\r\n              <p className='errormessage'>{errors.password.message}</p>\r\n            ) : null}\r\n          </div>\r\n          <button className='btnLogin' type='submit'>\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\components\\admin\\admin.js",["52"],"import React, { useState } from 'react';\r\nimport { AddPlyerPopup } from './addPlyerPopup/AddPlyerPopup';\r\nimport { PlayerList } from './playerList/PlayerList';\r\nimport admin from './admin.css';\r\n\r\nexport const Admin = () => {\r\n  // const [showModal, setShowModal] = useState(false);\r\n  const [playersArr, setplayersArr] = useState([]);\r\n  const [updatedPlayerList, setUpdatedPlayerList] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      {localStorage.getItem('loggedIn') !== null ? (\r\n        <div className='adminContainer'>\r\n          <div className='addPlyerPopup'>\r\n            <AddPlyerPopup setUpdatedPlayerList={setUpdatedPlayerList} />\r\n          </div>\r\n\r\n          <div className='wrapperPlayerList'>\r\n            {/* <div>all players from BE</div> */}\r\n            <PlayerList\r\n              updatedPlayerList={updatedPlayerList}\r\n              setUpdatedPlayerList={setUpdatedPlayerList}\r\n              setplayersArr={setplayersArr}\r\n              playersArr={playersArr}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h1>Not authorized.</h1>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\components\\admin\\addPlyerPopup\\AddPlyerPopup.js",["53","54"],"C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\components\\admin\\playerList\\PlayerList.js",["55","56"],"import React, { useEffect } from 'react';\r\nimport { API_URL } from '../../../constants/api';\r\nimport axios from 'axios';\r\nimport playerList from './playerList.css';\r\n\r\nexport const PlayerList = (props) => {\r\n  const {\r\n    setplayersArr,\r\n    playersArr,\r\n    updatedPlayerList,\r\n    setUpdatedPlayerList,\r\n  } = props;\r\n\r\n  const newPlayerListAfterDelete = (data) => {\r\n    const formerPlayerList = playersArr;\r\n    const deletedPLayerObject = data.data;\r\n    let mergedObjectsArray = formerPlayerList.concat(deletedPLayerObject);\r\n\r\n    let newOb = Object.values(\r\n      mergedObjectsArray.reduce(\r\n        (acc, cur) => Object.assign(acc, { [cur._id]: cur }),\r\n        {}\r\n      )\r\n    );\r\n    setUpdatedPlayerList(newOb);\r\n  };\r\n\r\n  const deletePlayer = (playerId) => {\r\n    const data = playerId;\r\n    axios\r\n      .delete(`${API_URL}/deletePlayer/${data}`)\r\n      .then((data) => {\r\n        newPlayerListAfterDelete(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err, 'hej ');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${API_URL}/playerList`)\r\n      .then((res) => {\r\n        if (res) {\r\n          setplayersArr(res.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [updatedPlayerList]);\r\n\r\n  return (\r\n    <div className='containerPlayer'>\r\n      {playersArr.map((player) => {\r\n        return (\r\n          <div className='wrapperPlayer' key={player._id}>\r\n            <div className='wrapperImg'>\r\n              <img\r\n                className='playerImg'\r\n                src={`${API_URL}/uploads/${player.img}`}\r\n                alt=''\r\n              />\r\n            </div>\r\n            <div className='wrapperDesc'>\r\n              <div className='name'>{player.name}</div>\r\n              <div className='desc'>{player.desc}</div>\r\n            </div>\r\n            <div className='wrapperBtnDelete'>\r\n              <button\r\n                className='btnDelete'\r\n                onClick={() => deletePlayer(player._id)}\r\n              >\r\n                Delete\r\n                <i class='fas fa-trash-alt'></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\earcmlh\\projects\\Jact\\client\\src\\constants\\api.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":13},{"ruleId":"61","severity":1,"message":"65","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":12},{"ruleId":"61","severity":1,"message":"66","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":13},{"ruleId":"61","severity":1,"message":"67","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":13},{"ruleId":"61","severity":1,"message":"68","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":21},{"ruleId":"61","severity":1,"message":"69","line":9,"column":11,"nodeType":"63","messageId":"64","endLine":9,"endColumn":23},{"ruleId":"61","severity":1,"message":"70","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":18},{"ruleId":"71","severity":1,"message":"72","line":51,"column":6,"nodeType":"73","endLine":51,"endColumn":25,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'home' is defined but never used.","'login' is defined but never used.","'admin' is defined but never used.","'addPlyerPopup' is defined but never used.","'setShowModal' is assigned a value but never used.","'playerList' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setplayersArr'. Either include it or remove the dependency array.","ArrayExpression",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [setplayersArr, updatedPlayerList]",{"range":"80","text":"81"},[1261,1280],"[setplayersArr, updatedPlayerList]"]